/*
 * DataMunch by Markus Ressel
 * Copyright (c) 2018.
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "de.markusressel.datamunch"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "DataMunch_v${versionName}_(${versionCode})")

        multiDexEnabled true

        // Required for LastAdapter
        dataBinding.enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation project(':data')

    compileOnly "org.glassfish:javax.annotation:${rootProject.ext.javaxAnnotationVersion}"

    // Dagger 2
    implementation "com.google.dagger:dagger:${rootProject.ext.dagger2Version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger2Version}"
    // kapt "com.android.databinding:compiler:$gradle_plugin_version"

    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.dagger2Version}"
    implementation "com.google.dagger:dagger-android:${rootProject.ext.dagger2Version}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.ext.dagger2Version}"

    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:support-v13:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayoutVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"

    // RxPermissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    // RxJava (RxKotlin actually)
    implementation "io.reactivex.rxjava2:rxjava:2.1.9"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation "io.reactivex.rxjava2:rxkotlin:${rootProject.ext.rxKotlinVersion}"

    // RxBinding
    // RxJava binding APIs for Android UI widgets from the platform and support libraries.
    implementation "com.jakewharton.rxbinding2:rxbinding:${rootProject.ext.rxBindingVersion}"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4:${rootProject.ext.rxBindingVersion}"
    implementation "com.jakewharton.rxbinding2:rxbinding-design:${rootProject.ext.rxBindingVersion}"

    // RxBus (event bus)
    implementation 'com.eightbitlab:rxbus:1.0.2'

    implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"

    //Development
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // MaterialDrawer
    implementation("com.mikepenz:materialdrawer:${rootProject.ext.materialdrawerVersion}@aar") {
        transitive = true
    }

    // Iconics (use SVG resources)
    implementation "com.mikepenz:iconics-core:${rootProject.ext.iconicsVersion}@aar"
    implementation "com.mikepenz:iconics-views:${rootProject.ext.iconicsVersion}@aar"
    // Fonts
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:+@aar'
    implementation 'com.mikepenz:community-material-typeface:+@aar'

    // AboutLibraries ("About" screen)
    implementation("com.mikepenz:aboutlibraries:$aboutlibrariesVersion@aar") {
        transitive = true
    }

    // LastAdapter
    implementation 'com.github.nitrico.lastadapter:lastadapter:2.3.0'
    // kapt "com.android.databinding:compiler:$gradle_plugin_version"

    // Bottom Navigation
    implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'

    // Tab Navigation
    implementation 'com.github.devlight.navigationtabstrip:navigationtabstrip:1.0.4'

    // Material Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'

    // Swipe Button
    implementation 'com.ncorti:slidetoact:0.2.0'

    // Pattern Lock Screen
    implementation 'com.andrognito.patternlockview:patternlockview:1.0.0'
    // Optional, for RxJava2 adapter
    implementation 'com.andrognito.patternlockview:patternlockview-reactive:1.0.0'

    // CircleImageView
    implementation 'de.hdodenhof:circleimageview:2.2.0'

    // MaterialViewPager
    implementation 'com.github.florent37:materialviewpager:1.2.3'

    // RxLifecycle to prevent memory leaks
    def rxLifecycleVersion = rootProject.ext.rxLifecycleVersion
    implementation "com.trello.rxlifecycle2:rxlifecycle:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-kotlin:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$rxLifecycleVersion"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:$rxLifecycleVersion"

    // Shimmer layout
    implementation 'io.supercharge:shimmerlayout:2.0.0'

    // Zoomable ImageView
    implementation 'com.davemorrissey.labs:subsampling-scale-image-view:3.9.0'

    // ===============================
    // Android Architecture Components
    // ===============================

    // Navigation
    implementation "android.arch.navigation:navigation-fragment-ktx:$aacNavigationVersion"
    implementation "android.arch.navigation:navigation-ui-ktx:$aacNavigationVersion"

    // optional - Test helpers
    androidTestImplementation "android.arch.navigation:navigation-testing-ktx:$aacNavigationVersion"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}