apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "de.markusressel.datamunch"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    def presentationDependencies = rootProject.ext.presentationDependencies
    def presentationTestDependencies = rootProject.ext.presentationTestDependencies
    def developmentDependencies = rootProject.ext.developmentDependencies

    implementation project(':domain')
    implementation project(':data')

    // Dagger 2
    implementation presentationDependencies.dagger
    kapt presentationDependencies.daggerCompiler
    kapt "com.android.databinding:compiler:$gradle_plugin_version"

    // if you use the support libraries
    kapt presentationDependencies.daggerAndroidProcessor
    implementation presentationDependencies.daggerAndroid
    implementation presentationDependencies.daggerAndroidSupport

    implementation presentationDependencies.appCompatV7
    implementation presentationDependencies.designLibrary
    implementation presentationDependencies.supportV13
    implementation presentationDependencies.supportAnnotation
    implementation presentationDependencies.constraintLayout
    implementation presentationDependencies.cardviewV7

    implementation 'com.github.michael-rapp:android-preference-activity:5.0.5'

    // RxJava (RxKotlin actually)
    implementation presentationDependencies.rxKotlin

    implementation presentationDependencies.recyclerView

    provided presentationDependencies.javaxAnnotation

    androidTestImplementation presentationTestDependencies.mockito
    androidTestImplementation presentationTestDependencies.dexmaker
    androidTestImplementation presentationTestDependencies.dexmakerMockito
    androidTestImplementation presentationTestDependencies.espresso
    androidTestImplementation presentationTestDependencies.testingSupportLib

    //Development
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // Logging
    implementation presentationDependencies.timberkt

    // MaterialDrawer
    implementation("com.mikepenz:materialdrawer:${rootProject.ext.materialdrawerVersion}@aar") {
        transitive = true
    }

    // Iconics (use SVG resources)
    implementation presentationDependencies.iconicsCore
    implementation presentationDependencies.iconicsViews
    // Fonts
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:+@aar'
    implementation 'com.mikepenz:community-material-typeface:+@aar'

    // AboutLibraries ("About" screen)
    implementation("com.mikepenz:aboutlibraries:${rootProject.ext.aboutlibrariesVersion}@aar") {
        transitive = true
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}