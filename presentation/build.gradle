apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "de.markusressel.datamunch"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        setProperty("archivesBaseName", "DataMunch_v${versionName}_(${versionCode})")

        multiDexEnabled true

        // Required for LastAdapter
        dataBinding.enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation project(':data')

    // Dagger 2
    implementation "com.google.dagger:dagger:${rootProject.ext.dagger2Version}"
    kapt "com.google.dagger:dagger-compiler:${rootProject.ext.dagger2Version}"
    kapt "com.android.databinding:compiler:$gradle_plugin_version"

    // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:${rootProject.ext.dagger2Version}"
    implementation "com.google.dagger:dagger-android:${rootProject.ext.dagger2Version}"
    implementation "com.google.dagger:dagger-android-support:${rootProject.ext.dagger2Version}"

    implementation "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:design:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:support-v13:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.ext.constraintLayoutVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.ext.supportLibVersion}"

    implementation 'com.github.michael-rapp:android-preference-activity:5.0.5'
    implementation 'com.github.michael-rapp:android-material-preferences:3.1.2'

    // RxPermissions
    implementation 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.5@aar'

    // Butterknife for Kotlin
    implementation 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'

    // RxJava (RxKotlin actually)
    implementation "io.reactivex.rxjava2:rxjava:2.1.8"
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation "io.reactivex.rxjava2:rxkotlin:${rootProject.ext.rxKotlinVersion}"

    implementation "com.android.support:recyclerview-v7:${rootProject.ext.supportLibVersion}"

    provided "org.glassfish:javax.annotation:${rootProject.ext.javaxAnnotationVersion}"

//    androidTestImplementation presentationTestDependencies.mockito
//    androidTestImplementation presentationTestDependencies.dexmaker
//    androidTestImplementation presentationTestDependencies.dexmakerMockito
//    androidTestImplementation presentationTestDependencies.espresso
//    androidTestImplementation presentationTestDependencies.testingSupportLib

    //Development
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    // MaterialDrawer
    implementation("com.mikepenz:materialdrawer:${rootProject.ext.materialdrawerVersion}@aar") {
        transitive = true
    }

    // Iconics (use SVG resources)
    implementation "com.mikepenz:iconics-core:${rootProject.ext.iconicsVersion}@aar"
    implementation "com.mikepenz:iconics-views:${rootProject.ext.iconicsVersion}@aar"
    // Fonts
    implementation 'com.mikepenz:google-material-typeface:3.0.1.1.original@aar'
    implementation 'com.mikepenz:material-design-iconic-typeface:+@aar'
    implementation 'com.mikepenz:community-material-typeface:+@aar'

    // AboutLibraries ("About" screen)
    implementation("com.mikepenz:aboutlibraries:$aboutlibrariesVersion@aar") {
        transitive = true
    }

    // LastAdapter
    implementation 'com.github.nitrico.lastadapter:lastadapter:2.3.0'
    kapt "com.android.databinding:compiler:$gradle_plugin_version"

    // Bottom Navigation
    implementation 'com.aurelhubert:ahbottomnavigation:2.1.0'

    // Tab Navigation
    implementation 'com.github.devlight.navigationtabstrip:navigationtabstrip:1.0.4'

    // Material Dialogs
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.afollestad.material-dialogs:commons:0.9.6.0'

    // Swipe Button
    implementation 'com.ebanx:swipe-button:0.8.3'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}